DROP TABLE IF EXISTS USERS CASCADE;
CREATE TABLE  USERS
(
    USER_ID   INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL     VARCHAR,
    LOGIN     VARCHAR,
    USER_NAME VARCHAR,
    BIRTHDAY  DATE
);
DROP TABLE IF EXISTS GENRES CASCADE;
CREATE TABLE  GENRES
(
    GENRE_ID   INT PRIMARY KEY,
    GENRE_NAME VARCHAR
);
DROP TABLE IF EXISTS RATINGS CASCADE;
CREATE TABLE  RATINGS
(
    RATINGMPAA_ID INT PRIMARY KEY,
    RATING_NAME   VARCHAR
);
DROP TABLE IF EXISTS FILMS CASCADE;
CREATE TABLE  FILMS
(
    FILM_ID       BIGINT PRIMARY KEY AUTO_INCREMENT,
    LIKESCOUNT    INT,
    FILM_NAME     VARCHAR,
    DESCRIPTION   VARCHAR,
    RELEASE_DATE  DATE,
    DURATION      INT,
    RATINGMPAA_ID INT REFERENCES RATINGS (RATINGMPAA_ID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS FILM_GENRES CASCADE;
CREATE TABLE  FILM_GENRES
(
    FILM_GENRE_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    FILM_ID       BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    GENRE_ID      INT REFERENCES GENRES (GENRE_ID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS FRIENDS CASCADE;
CREATE TABLE  FRIENDS
(
    FRIENDSTATUS_ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_ID         INT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FRIEND_ID       INT REFERENCES USERS (USER_ID) ON DELETE CASCADE
);
DROP TABLE IF EXISTS FRIENDSTATUS CASCADE;
CREATE TABLE  FRIENDSTATUS
(
    FRIENDSTATUS_ID INT REFERENCES FRIENDS (FRIENDSTATUS_ID) ON DELETE CASCADE,
    STATUSNAME      VARCHAR
);
DROP TABLE IF EXISTS LIKES CASCADE;
CREATE TABLE  LIKES
(
    LIKE_ID BIGINT PRIMARY KEY AUTO_INCREMENT,
    USER_ID BIGINT REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FILM_ID BIGINT REFERENCES FILMS (FILM_ID) ON DELETE CASCADE

);
